{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"云亦然","url":"http://JaneBraun.github.io"},"pages":[{"title":"自我介绍","date":"2019-03-04T15:04:27.000Z","updated":"2018-11-11T09:30:21.086Z","comments":true,"path":"about/index.html","permalink":"http://JaneBraun.github.io/about/index.html","excerpt":"","text":"QQ：5318454322018.11.11第一次建设本站就先这样先哈哈"},{"title":"Tags","date":"2019-03-04T15:04:07.126Z","updated":"2018-11-11T09:31:31.357Z","comments":false,"path":"tags/index.html","permalink":"http://JaneBraun.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"网络安全之CSRF漏洞","slug":"网络安全之CSRF漏洞","date":"2019-10-27T07:53:00.000Z","updated":"2019-10-28T03:45:14.255Z","comments":true,"path":"2019/10/27/网络安全之CSRF漏洞/","link":"","permalink":"http://JaneBraun.github.io/2019/10/27/网络安全之CSRF漏洞/","excerpt":"","text":"CSRF漏洞CSRF漏洞专题概述Cross-Site Request Forgery（CSRF），中文一般译作跨站请求伪造。经常入选owasp Top10，在当前web漏洞排行中，与xss、sql注入等相比而言，CSRF相对来说受到的关注要小很多，但是危害却非常大。可以这么理解CSRF攻击：攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的帐号，甚至于购买商品，虚拟货币转账……造成的主要问题包括：个人隐私的泄漏以及财产安全。 CSRF攻击的常见危害 发送邮件 修改账户信息 资金转账 网站被上传网马 CSRF攻击原理A–存在CSRFB–攻击者C–受害者 CSRF检测方式 手工测试手工测试poc代码 半自动测试CSRFTester、burpsuite CSRF利用常见的利用： 修改个人信息 转账操作 后台增加管理员 CSRF getshell/拖库 CSRF解决办法 可以利用http watch类监控访问网页的程序防止cookie被劫取 对于一个网站而言，可以禁用诸如长期授权的办法，改用瞬时授权（在每个form中提供隐藏的field） 利用“双提交”cookie;此方法只工作于Ajax(ASP.NET技术)，如果某个授权的cookie在form post之前正被JavaScript代码读取，那么限制跨域规则将被应用。如果服务器需要在Post请求体或者URL中包含授权cookie的请求，那么这个请求必须来自于受信任的域，因为其他域是不能从信任域读取cookie的 使用特殊的浏览器，多窗口浏览器新窗口会带有当前会话。这就带来了安全问题。这种情况下可以使用特殊的浏览器 由于CSRF时效性，可以采用浏览器会话结束时清理浏览器cookie的办法 在non-GET请求中使用Security token（安全性令牌） var ap = new APlayer({ element: document.getElementById(\"aplayer-VYRBeLFN\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"网易云歌曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之命令逻辑漏洞","slug":"网络安全之命令逻辑漏洞","date":"2019-08-15T09:18:09.000Z","updated":"2019-12-16T02:42:52.413Z","comments":true,"path":"2019/08/15/网络安全之命令逻辑漏洞/","link":"","permalink":"http://JaneBraun.github.io/2019/08/15/网络安全之命令逻辑漏洞/","excerpt":"","text":"命令执行漏洞常见攻击流程 前期准备 下载程序源码并部署测试环境 代码审计 结合手工和工具对程序源代码进行白盒审计 利用常见黑盒技术手段对当前环境进行检测 攻击利用 针对第二阶段发现的问题进行分析及利用 命令执行漏洞定义 命令执行漏洞，就是指用户通过浏览器或其他辅助程序提交执行命令，由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令。 通俗地讲：当应用需要调用一些外部程序去处理内容的情况下，就会用一些执行系统命令的函数。如php中的system、exec、shell_exec等，当用户可以控制命令执行函数中的参数时，将可以注入恶意系统命令到正常的命令中，造成命令执行攻击。 命令执行漏洞原理命令执行漏洞之所以会产生，原因就是由于开发人员编写源码，没有针对代码中可执行的特殊函数入口做过滤，导致客户端可以提交恶意构造语句提交，并交由服务器端执行。 命令注入攻击中WEB服务器没有过滤类似system(),eval(),exec()等函数是该漏洞攻击成功的最主要原因。 命令执行漏洞常见分类 代码层：一些商业应用需要执行命令，商业应用的一些核心代码可能封装在二进制文件中，在web应用中通过system函数来调用; 系统层：（bash破壳漏洞）如果我们能够控制执行的bash的环境变量，就可以通过破壳漏洞来执行任意代码； 第三方组件层：很典型的就是WordPress中，可以选择使用ImageMagick这个常用的图片处理组件，对用户上传的图片进行处理，造成命令执行，另外JAVA中的命令执行漏洞（struts2/Elasticsearch等） 命令执行漏洞危害 命令执行漏铜 任意执行系统命令 恶意木马被种植 挂马、钓鱼 敏感信息泄露 …… var ap = new APlayer({ element: document.getElementById(\"aplayer-MPMlfPog\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"Python爬取豆瓣正在热映","slug":"Python爬取豆瓣正在热映","date":"2019-08-07T08:44:31.000Z","updated":"2019-08-15T09:17:39.255Z","comments":true,"path":"2019/08/07/Python爬取豆瓣正在热映/","link":"","permalink":"http://JaneBraun.github.io/2019/08/07/Python爬取豆瓣正在热映/","excerpt":"","text":"Python爬取豆瓣正在热映的电影信息[Python爬虫豆瓣]1234567891011121314151617181920212223242526272829303132333435363738394041424344# encoding: utf-8import requestsfrom lxml import etree# 1. 将目标网站上的页面抓取下来headers = &#123; 'User-Agent': \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36\", 'Referer': \"https://movie.douban.com/\"&#125;url = \"https://movie.douban.com/cinema/nowplaying/zhongshan/\"response = requests.get(url, headers=headers)text = response.text# print(response.text)# response.text:返回的是一个经过解码后的字符串，是str（Unicode）类型# response.content:返回的是一个原生字符串，就是从网页上抓取下来的，没有经过处理的字符串，是bytes类型# 2. 将抓取下来的数据根据一定的规则进行抓取html = etree.HTML(text)ul = html.xpath(\"//ul[@class='lists']\")[0]lis = ul.xpath(\"./li\")movies = []for li in lis: title = li.xpath(\"@data-title\")[0] score = li.xpath(\"@data-score\")[0] duration = li.xpath(\"@data-duration\")[0] region = li.xpath(\"@data-region\")[0] director = li.xpath(\"@data-director\")[0] actors = li.xpath(\"@data-actors\")[0] thumbnail = li.xpath(\".//img/@src\")[0] movie = &#123; 'title': title, 'score': score, 'duration': duration, 'region': region, 'director': director, 'actors': actors, 'thumbnail': thumbnail &#125; movies.append(movie)print(movies) 爬取效果 var ap = new APlayer({ element: document.getElementById(\"aplayer-hBNiNlNk\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python爬虫笔记","slug":"python爬虫笔记","permalink":"http://JaneBraun.github.io/tags/python爬虫笔记/"}]},{"title":"Samba服务器架设","slug":"Samba服务器架设","date":"2019-08-02T05:48:32.000Z","updated":"2019-12-16T02:42:52.368Z","comments":true,"path":"2019/08/02/Samba服务器架设/","link":"","permalink":"http://JaneBraun.github.io/2019/08/02/Samba服务器架设/","excerpt":"","text":"Samba服务器架设:作用：linux在局域网上共享文件 关闭防火墙service iptables stop或 sudo systemctl stop firewalld.service 关闭SELinuxsetenforce 0 安装samba和samba-clientyum install -y samba samba-client 添加用户useradd testpdbedit -a test 启动samba服务添加开机启动: chkconfig smb on立即启动samba: service smb start 测试在windows电脑中打开我的电脑在地址栏中输入 \\IP自定义共享目录创建共享目录，并修改权限mkdir -p /var/www/html chmod -R 777 /var/www/html 修改配置文件中 : /etc/samba/smb.conf添加如下内容: [html] #共享目录名称 path = /var/www/html #共享目录位置 browseable = yes #是否可以浏览 writable = yes #是否可以写入 public = no #是否公开或者公共 对共享文件夹右键映射网络驱动器 就不用每次都要输IP地址才能访问 问题：如果windows下登录samba服务器后无法访问linux下共享目录，提示没有权限。则检查 确保linux下防火墙关闭或者是开放共享目录权限 确保samba服务器配置文件smb.conf设置没有问题，可网上查阅资料看配置办法 确保setlinux关闭，可以用setenforce 0命令执行。 默认的，SELinux禁止网络上对Samba服务器上的共享目录进行写操作，即使你在smb.conf中允许了这项操作。 /usr/bin/setenforce 修改SELinux的实时运行模式 setenforce 1 设置SELinux 成为enforcing模式 setenforce 0 设置SELinux 成为permissive模式 如果要彻底禁用SELinux 需要在/etc/sysconfig/selinux中设置参数selinux=0 ，或者在/etc/grub.conf中添加这个参数 /usr/bin/setstatus -v var ap = new APlayer({ element: document.getElementById(\"aplayer-FKgoUuZI\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://JaneBraun.github.io/tags/Linux/"}]},{"title":"Python之分支","slug":"Python之分支","date":"2019-07-26T07:49:28.000Z","updated":"2019-07-26T07:57:42.150Z","comments":true,"path":"2019/07/26/Python之分支/","link":"","permalink":"http://JaneBraun.github.io/2019/07/26/Python之分支/","excerpt":"","text":"python学习笔记之分支[Python基础之判断年龄]1234567891011# 1. 定义一个整数变量记录年龄age = 15# 2. 判断是否满了18岁if age &gt;= 18: # 3. 如果满了18岁，可以进网吧嗨皮 print(\"你已经成年，欢迎进网吧嗨皮\") print(\"欢迎欢迎，热烈欢迎\")print(\"看看什么时候会执行\") [Python基础之判断年龄改进版]123456789101112131415# 输入用户年龄age = int(input(\"请输入您的年龄：\"))# 判断是否满 18 岁 (&gt;=)if age &gt;= 18: # 如果满 18 岁，允许进网吧嗨皮 print(\"你已经成年，欢迎来网吧嗨皮\")else: # 如果未满 18 岁，提示回家写作业 print(\"你还没有成年，请回家写作业吧\") [Python基础之逻辑运算演练]12345678910111213141516# 练习1: 定义一个整数变量 age,编写代码判断是否正确age = 120# 要求人的年龄在 0-120 之间\"\"\"10000age &gt;= 0 and age &lt;=120andor\"\"\"if age &gt;= 0 and age &lt;=120: print(\"年龄正确\")else: print(\"年龄不正确\") [Python基础之判断考试成绩]12345678910# 练习2：定义两个整数变量 python_score、c_score，编写代码判断成绩python_score = 80c_score = 75# 要求只要有一门成绩 &gt; 60 分就算及格if python_score &gt; 60 or c_score &gt; 60: print(\"考试通过\")else: print(\"考试失败，继续努力\") [Python基础之非公勿入]12345678# 练习3：定义一个布尔型变量 is_employee,编写代码判断是否是本公司员工is_employee = False# 如果不是提示不允许入内# 在开发中，通常希望某个条件不满足时，执行一些代码，可以使用 not# 另外，如果需要拼接复杂的逻辑计算条件，同样也有可能用到notif not is_employee: print(\"非本公司人员，请勿入内\") [Python基础之女友的节日]1234567891011121314151617181920# 定义 holiday_name 字符串变量记录节日名称holiday_name = \"情人节\"# 如果是 情人节 应该 买玫瑰/看电影if holiday_name == \"情人节\": print(\"买玫瑰\") print(\"看电影\")# 如果是 平安夜 应该 买苹果/吃大餐elif holiday_name == \"平安节\": print(\"买苹果\") print(\"吃大餐\")# 如果是 生日 应该 买蛋糕elif holiday_name == \"生日\": print(\"买蛋糕\")# 其他的日子每天都是节日啊....else: print(\"每天都是节日啊\") [Python基础之火车站安检]12345678910111213141516171819202122# 定义布尔型变量 has_ticket 表示是否有车票has_ticket = True# 定义整型变量 knife_length 表示刀的长度，单位：厘米knife_length = 30# 首先检查是否有车票，如果有，才允许进行 安检if has_ticket: print(\"车票检查通过，准备开始安检\") # 安检时，需要检查刀的长度，判断是否超过 8 厘米 if knife_length &gt; 8 : # 如果超过 8 厘米，提示刀的长度，不允许上车 print(\"您携带的刀太长了，有 %d 厘米长\"% knife_length) print(\"不允许上车\") # 如果不超过 8 厘米，安检通过 else: print(\"安检已经通过，祝你旅途愉快！\")# 如果没有车票，不允许进门else: print(\"请先买票\") [Python基础之石头剪刀布]1234567891011121314151617181920212223242526272829303132# 导入随机工具包# 注意：在导入工具包的时候，应该将导入的语句，放在文件的顶部# 因为，这样可以方便下方的代码，在任何需要的时候，使用工具包中的工具import random# 从控制台输入要出的拳 —— 石头(1)/剪刀(2)/布(3)player = int(input(\"请输入您要出的拳 石头(1) /剪刀(2) /布(3)\"))# 电脑 随机 出拳 —— 先假定电脑只会出石头，完成整体代码功能computer = random.randint(1,3)print(\"玩家选择的拳头是 %d - 电脑出的拳是 %d\" % (player,computer))# 比较胜负# 1 石头 胜 剪刀# 2 剪刀 胜 布# 3 布 胜 石头# if (()# or ()# or ()):if ((player == 1 and computer == 2) or (player == 2 and computer == 3) or (player == 3 and computer == 1)): print(\"欧耶，电脑弱爆了！\")# 平局elif player == computer: print(\"真是心有灵犀啊，再来一把\")# 其他的情况就是电脑获胜else: print(\"不服气，我们决战到天明！\") var ap = new APlayer({ element: document.getElementById(\"aplayer-QpWUesZU\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python学习笔记","slug":"python学习笔记","permalink":"http://JaneBraun.github.io/tags/python学习笔记/"}]},{"title":"Python之Python基础","slug":"Python之Python基础","date":"2019-07-26T07:31:38.000Z","updated":"2019-07-26T07:59:50.159Z","comments":true,"path":"2019/07/26/Python之Python基础/","link":"","permalink":"http://JaneBraun.github.io/2019/07/26/Python之Python基础/","excerpt":"","text":"python学习笔记之Python基础[Python基础之hello]12print(\"hello world\")print(\"hello hello\") [Python基础之第2个Python程序]1print(\"hello hello\") [Python基础之注释]1234567891011121314# 这是第一个注释print(\"hello world\") # 输出欢迎信息\"\"\"这是多行注释。。。。。。注释完了\"\"\"# 这是第二个注释print(\"hello hello\") [Python基础之qq号码]12345678# 1.定义一个变量记录 QQ 号码qq_number = \"2135434\"# 2.定义一个变量记录 QQ 密码qq_passsword = \"123\"# 如果希望通过解释器的方式，输出变量的内容，需要使用print函数print(qq_number)print(qq_passsword) [Python基础之超市买苹果]12345678910111213# 1.定义苹果的单价price = 8.5# 2.挑选苹果weight = 7.5# 3.计算付款金额money = price * weight# 4.只要买苹果就返 5 元money = money - 5 #money -= 5print(money) [Python基础之个人信息]123456789101112131415161718192021222324\"\"\"姓名:小明年龄:18岁性别:是男生身高:1.75米体重:75.0公斤\"\"\"# 在Python中，定义变量时不需要指定变量的类型的# 在运行的时候，Python解释器，会根据赋值语句等号右侧的数据# 自动推导出变量中保存数据的准确类型# str 表示是一个字符串类型name = \"小明\"# int 表示是一个整数类型age = 18# bool 表示是一个布尔类型，真True 或者假 Falsegender = True # 是# float 表示是一个小数类型，浮点数height = 1.75weight = 75.0print(2 ** 1000)print(name) [Python基础之买苹果增强版]12345678910111213141516171819# 1.输入苹果的单价price_str = input(\"苹果的单价:\")# 2.输入苹果的重量weight_str = input(\"苹果的重量:\")# 3.计算支付的总金额# 注意:两个字符串变量之间是不能直接用乘法的# money = price_str * weight_str# 1&gt; 将价格转换成小数price = float(price_str)# 2&gt; 将重量转换成小数weight = float(weight_str)# 3&gt; 用两个小数来计算最终的金额money = price * weight #浮点数print(\"您需要支付\" + str(money) + \"元\") [Python基础之买苹果改进]12345678910# 1. 提示用户输入苹果的单价price = float(input(\"苹果的单价:\"))# 2. 提示用户输入苹果的重量weight = float(input(\"苹果的重量:\"))# 3. 计算金额money = price * weightprint(money) [Python基础之格式化输出]12345678910111213141516171819# 定义字符串变量name，输出 我的名字叫小明，请多多关照！name = \"小明\"print(\"我的名字叫 %s，请多多关照!\" % name)# 定义整数变量 student_no,输出 我的学号的 000001student_no = 2print(\"我的学号是 %06d\" % student_no)# 定义小数 price、weight、money# 输出 苹果单价 9.00 元/斤,购买了 5.00 斤,需要支付 45.00 元price = 8.5weight = 7.5money = price * weightprint(\"苹果单价 %.2f 元/斤,购买了 %.2f 斤,需要支付 %.2f 元\" %(price,weight,money))# 定义一个小数scale，输出 数据比例是10.00%scale = 0.8print(\"数据比例是 %.2f%%\" % (scale * 100)) var ap = new APlayer({ element: document.getElementById(\"aplayer-jpnrUCnb\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python学习笔记","slug":"python学习笔记","permalink":"http://JaneBraun.github.io/tags/python学习笔记/"}]},{"title":"网络安全之暴力破解攻击","slug":"网络安全之暴力破解攻击","date":"2019-07-08T01:41:53.000Z","updated":"2019-12-16T02:42:52.430Z","comments":true,"path":"2019/07/08/网络安全之暴力破解攻击/","link":"","permalink":"http://JaneBraun.github.io/2019/07/08/网络安全之暴力破解攻击/","excerpt":"","text":"暴力破解攻击-常见攻击流程按照程序正常操作流程，记录其数据包分析数据包，找到数据包中的目标（被爆破对象）导入本地/远程字典文件设置线程数，一般为多线程，开始对目标进行爆破 暴力破解攻击-定义暴力破解攻击是指攻击者通过系统地组合所有可能性（例如登录时用到的账户名、密码），尝试所有的可能性破解用户的账户名、密码等敏感信息。攻击者会经常使用自动化脚本组合出正确的用户名和密码。 暴力破解攻击-常见分类B/S架构暴力破解包含如下分类：1）登录框（用户名和密码）2）URL参数（用户ID值、目录名、参数名等）3）验证码（验证码接收处） C/S架构暴力破解包含如下分类：1）Windows远程桌面2）SSH远程管理3）数据库帐号密码（MYSQL、MSSQL、Oracle等）4）FTP帐号密码 暴力破解攻击-危害用户密码被重置敏感目录、参数被枚举用户订单被枚举等等 B/S架构常见检测方式远程通讯法:第一，确立攻击目标，凡是需要账号密码输入的地方都可以是攻击目标（常见为web形式的）第二，建立socket通信，为提高效率，通常是多进程；第三，输入正确的帐号（根据实际可对帐号进行暴力枚举）;第四，通过字典档或规则生成的待测试的密码；第五，发送密码，取得验证反馈；第六，拒绝密码，重复第四步起，如果密码通过，程序停止，显示密码。 本地破解法:第一，将密码档中的帐号和密码的密文用程序中的变量保存；第二，通过字典档或规则生成带测试的密码明文；第三，将待测试的密码明文用系统密码加密的同样的算法进行加密；第四，比较加密后密文与程序变量保存的密文是否相同；第五，如不同，重复第二步，如相同，程序停止，显示密码。 C/S架构常见检测方式远程通讯法:第一，确立攻击目标，需要账号密码输入的地方（常见为远程桌面、SSH、MYSQL、MSSQL等）;第二，建立socket通信（多进程）；第三，输入账号（一般为系统默认账号）；第四，通过字典或规则生成待测试的密码；第五，发送密码，取得验证反馈；第六，拒绝密码，重复第四步起，如果密码通过，程序停止，显示密码。 本地破解法：第一，将密码档中的帐号和密码密文用程序中的变量保存；第二，通过字典或规则生成待测试的密码明文；第三，将待测试的密码明文用系统密码加密同样的算法进行加密；第四，比较加密后密文与程序变量保存的密文是否相同；第五，如不同，重复第二步起，如相同，程序停止，显示密码。 var ap = new APlayer({ element: document.getElementById(\"aplayer-ZCOJwFBa\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之业务逻辑漏洞","slug":"网络安全之业务逻辑漏洞","date":"2019-05-31T02:08:10.000Z","updated":"2019-12-16T02:42:52.335Z","comments":true,"path":"2019/05/31/网络安全之业务逻辑漏洞/","link":"","permalink":"http://JaneBraun.github.io/2019/05/31/网络安全之业务逻辑漏洞/","excerpt":"","text":"常见攻击流程正常操作并记录数据包 ⬇（按照正常操作流程，记录其数据包）分析数据包 ⬇(分析数据包，找到数据包中的敏感部分)分析程序验证机制 ⬇(分析程序后台所采用的验证机制、手段)修改源数据包（修改源数据包数据，验证推测是否成功） 业务逻辑漏洞定义业务逻辑漏洞是指由于程序逻辑不严谨或逻辑太复杂，导致一些逻辑分支不能正常处理或处理错误。 通俗地讲 ：一个系统的功能太多后，程序开发人员就难以思考全面，对某些地方可能有遗漏，或者未能正常处理，从而导致逻辑漏洞。逻辑漏洞也可以说是程序开发人员的思路错误、程序 开发人员的逻辑存在漏洞。 业务逻辑漏洞特效业务逻辑漏洞是非常隐蔽的，它不像SQL注入、XSS跨站脚本攻击、命令执行、文件上传漏洞等有鲜明的标识自动化扫描器可以定义一系列的规则识别出这些漏洞，从而业务逻辑漏洞一般出现在功能（业务流程）上，这是漏洞扫描工具无法识别的。 业务逻辑漏洞只出现于业务流程中（模块功能），也就是说，网站的任何部分都有可能存在着逻辑错误漏洞。比如，修改个人资料就完全可能出现逻辑错误漏洞。 业务逻辑漏洞常见分类业务逻辑漏洞中的用户体系包含如下问题： 1）密码重置问题 2）cookies验证问题 3）越权操作问题 业务逻辑漏洞常见危害业务逻辑漏洞 1）任意密码修改 2）越权访问 3）密码任意找回 4）交易支付金额任意修改 5）… 业务逻辑漏洞–常见的挖掘姿势 黑客在挖掘业务逻辑漏洞时的一般操作步骤如下:1）发现网站所提供的功能模块。比如,修改密码、找回密码、修改个人资料等功能。 2）针对具体的功能确定业务流程，详细划分具体步骤，以购物为例介绍，购物流程如下: 挑选商品，商品可多选； 立刻购买，在“立刻购买”按钮旁边可以选择购买数量、购买样式等； 显示购买信息，在此步骤可以给卖家留言，填写购买数量、使用优惠券、匿名购买、找人付款； 提交订单； 付款。 3）拦截HTTP/HTTPS请求，分析其参数项的含义; 4) 修改参数值，尝试触发业务逻辑漏洞； 5）返回等2步骤，对其他功能继续测试。 业务逻辑漏洞–密码重置密码重置 业务逻辑漏洞–支付交易支付交易 授权验证绕过_常见检测手段未授权访问非授权访问是指用户在没有通过认证授权的情况下能够直接访问需要通过认证才能访问的页面或文本信息。尝试将一些敏感的页面链接复制于其他浏览器或其他电脑上进行访问，看是否能访问成功。 越权访问1、垂直越权（垂直越权是指使用权限低的用户可以访问权限较高的用户）2、水平越权（水平越权是指相同权限的不同用户可以互相访问） 密码找回漏洞密码找回_常见检测手段 1）密码找回的凭证太弱，如只需要填入一个四位或者六位的 纯数字就可以重置密码，导致可以暴力破解。 2）密码找回凭证可从客户端直接获取。 3）密码找回凭证在页面中可以直接获取。 4）用户找回密码的邮箱地址或者手机号码被修改。 5）在最后提交修改的密码处的逻辑错误。 检测手段：凭证太弱、客户端获取、页面获取、信息修改、密码逻辑错误 var ap = new APlayer({ element: document.getElementById(\"aplayer-nQHLsHHR\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之上传漏洞","slug":"网络安全之上传漏洞","date":"2019-05-15T08:10:12.000Z","updated":"2019-05-31T02:50:47.488Z","comments":true,"path":"2019/05/15/网络安全之上传漏洞/","link":"","permalink":"http://JaneBraun.github.io/2019/05/15/网络安全之上传漏洞/","excerpt":"","text":"上传漏洞在网站的运营过程中，不可避免地要对网站的某些页面或者内容进行更新，这时便需要使用到网站的文件上传的功能。如果不对被上传的文件进行限制或者限制被绕过，该功能便有可能会被利用于上传可执行文件、脚本到服务器上，进而进一步导致服务器沦陷。 常见的漏洞分类：服务器配置不当导致文件上传 开源编辑器存在上传漏洞 本地文件上传限制可以被绕过 服务端过滤不严可以被绕过 解析漏洞导致的文件执行 文件路径截断 上传漏洞的利用成果:较为快速、直接地获取网站的web权限 配合其他漏洞达到同样获取网站权限的目的 为后续进一步渗透提供较方便的跳板 ISS写权限漏洞漏洞成因 在服务器配置不当的时候， 可能上传文件的页面都不需要， 就可以实现文件上传功能。 一般都是http请求put方法。 当然web服务器默认是不开启PUT等方法的， 出现该漏洞的原因主要是网站管理员对服务器的错误配置 常见的主要就是管理员错误地打开了IIS的服务器的WEBDAV而且没有开启验证，导致可以PUT文件到服务器再利用服务器的解析漏洞运行恶意代码或用WEBDAV的MOVE方法将所上传的带有恶意代码的普通文件后缀修改为可执行文件后缀，运行恶意代码网络上已经有了利用工具，利用手段也十分简单。 漏洞验证漏洞验证：主要检测是否开启put，move，copy等方法漏洞利用-从写权限到文件上传1、PUT一个txt文件到服务器上2、把文件MOVE成IIS可解析的脚本类型文件 解析漏洞漏洞成因解析漏洞： 是指web服务器因对http请求处理不当导致， 将不允许可执行的脚本， 文件等当作可执行的脚本，文件等执行。 该漏洞一般配合服务器的文件上传功能，以获取服务器的权限。 解析漏洞分类： IIS 5.x/6.0解析漏洞 IIS 7.0/IIS 7.5/Nginx &lt;0.8.3畸形解析漏洞 Nginx &lt;8.03空字节代码执行漏洞 在Fast-CGI关闭的情况下，Nginx&lt;8.03依然存在解析漏洞在一个文件路径(/xx.jpg)后面加上%00.php会将/.xx.jpg%00.php解析为php文件。 Apache解析漏洞 apache以moudule模式结合php存在解析漏洞，Apache是从右到左开始判断解析，如果为不可识别解析，就再往左判断。1.php.xxx.aaa CVE-2013-4547 Nginx解析漏洞 文件上传漏洞漏洞成因上传的文件仅经过javascript的验证（客户本地验证），仅客户端验证是不安全程序员写代码的时候考虑不周全，或仅设置黑名单白名单等方式，或目录参数传递可控，或者验证方式可以被绕过等等。 传统的验证手段: 没有任何验证 JS验证 MIME类型验证 后缀验证 文件内容验证 开源编辑器的上传漏洞漏洞成因程序员在编写上传验证代码时，考虑得不是很周全，过滤不严格从而造成了，编辑器也同样存在上传漏洞。 编辑器种类: 1.eWebEditor 2.FCKeditor 3.Kindeditor var ap = new APlayer({ element: document.getElementById(\"aplayer-opGZDDCa\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之XXS攻击","slug":"网络安全之XXS攻击","date":"2019-04-19T02:52:27.000Z","updated":"2019-12-16T02:42:52.389Z","comments":true,"path":"2019/04/19/网络安全之XXS攻击/","link":"","permalink":"http://JaneBraun.github.io/2019/04/19/网络安全之XXS攻击/","excerpt":"","text":"一、XSS攻击专题概述 跨站脚本攻击过程 二、XSS攻击定义、分类及危害 XSS攻击的定义跨站脚本攻击，为不和层叠样式表的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的特殊目的。 XSS攻击的危害这些危害包括但不局限于：盗取管理员或普通用户cookie、session；读取、篡改、添加、删除敏感数据；网站挂马；非法转账；控制受害者机器向其它网站发起攻击；….. XSS攻击的分类按攻击方式分类反射型XSS：只是简单地把用户输入的数据反射给浏览器，黑客需要诱使用户点击链接。也叫作“非持久型XSS”。存储型XSS：把用户输入的数据“存储”在服务器端。这种XSS具有很强的稳定性。比较常见的一个场景是，攻击者写下一篇包含恶意Javascript代码的博客文章，文章发表后，所有访问该博客文章的用户，都会在他们的浏览器中执行这段恶意的Javascript代码。黑客把恶意的脚本保存在服务器端。存储型XSS也叫持久性XSS。DOM based XSS：从效果上来说也是一种反射型XSS。通过修改页面的DOM节点形成的XSS，称之为DOM Based XSS。 三、XSS攻击常见编码及绕过方式 XSS攻击常见编码URL编码、JS编码、CSS编码、复合编码、字符编码 常见编码划分URL编码：只是简单一个百分号和该字符的ASCII编码所对应的2位十六进制数字，例如“/”的URL编码为%2F(一般大写，但不强求)JS编码：如“e”编码为“\\145”、“\\x65”或”\\u0065”CSS编码：用一个反斜线()后面跟1~6位的十六进制数字，例如e可以编码为”\\65”或”65”或”00065”复合编码：所谓复合编码，也就是说输出的内容输出在多个环境中；字符编码：把十进制、十六进制ASCII码或unicode字符编码，样式为“&amp;#数值;”，例如“&lt;”可以编码为”&#060;”和”&#x3c;” XSS攻击常见测试语句 常见测试语句：[常见测试语句][]12345678&lt;script&gt;alert( 'test' );&lt;/script&gt;&lt;svg onload=alert( 'test' )&gt;&lt;img src = \"java&amp;#99;ript:alert( 'test' )\" &gt;&lt;IMG SRC=# onerror=alert( ' test' )&gt;&lt;BODY ONLOAD=alert( 'test' )&gt;&lt;DIV STYLE= \"width:expression(alert( 'test' ));\" &gt;&lt;BASE HREF= \"javascript.:alert( 'test' );//\" &gt;...... var ap = new APlayer({ element: document.getElementById(\"aplayer-EiZpSTJz\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之SQL注入","slug":"网络安全之SQL注入","date":"2019-03-18T01:38:33.000Z","updated":"2019-03-18T01:51:02.538Z","comments":true,"path":"2019/03/18/网络安全之SQL注入/","link":"","permalink":"http://JaneBraun.github.io/2019/03/18/网络安全之SQL注入/","excerpt":"","text":"SQL注入专题概述一、目录 SQL注入定义及危害 SQL注入常见分类 SQL注入如何形成 SQL注入常见过程 SQL注入在渗透测试过程中的作用 二、SQL注入定义及危害 SQL注入的定义 所谓SQL注入，就是利用现有应用程序的特性，攻击者通过在Web表单、 URL等可输入数据的地方插入（恶意）SQL语句一并原有SQL语句被代库执行。 SQL命令就是前端应用程序和后端数据库之间的接口。 SQL注入的危害 这些危害包括但不局限于： 数据库敏感信息泄露； 网页被篡改、挂马； 数据库被恶意操作； 服务器被远程控制，被安装后门 三、SQL注入常见分类 按数据类型 数字形（Integer） 字符型（String） 按返回结果 显错注入（Error-Based） 盲注（Boolean/Time-Based Blind） 四、SQL注入的形成 SQL注入的 形成 1.数据与代码未严格分离； 2.用户提交的参数数据未做充分检查过滤即被代入到SQL命令中， 改变了原有SQL命令的“语义”，且成功被数据库执行。 五、SQL注入常见过程 客户端：参数值等数据被修改 服务端：未经检查和过滤即将被修改的数据注入到SQL命令中，SQL命令功能被修改 数据库引擎：执行被修改后的SQL命令 服务端：将注入的结果返回给客户端 客户端：根据上一次注入获取到的敏感信息构造注入语句进行进一步注入 六、SQL注入在渗透测试过程中的作用 绕过登录验证：使用万能密码登录网站后台等 获取敏感数据：获取网站管理员帐号、密码等 文件系统操作：列目录，读取、写入文件等 注册表操作：读取、写入、删除注册表等 执行系统命令：远程执行命令 SQL注入定义、划分及形成原因一、目录 SQL注入漏洞频繁出现 SQL注入漏洞如何寻找 SQL注入漏洞判断依据 常见SQL测试语句和技巧 二、SQL注入漏洞频繁出现 URL参数 HTTP包头 搜索框 目录名 文件名 ----未经检查和过滤即被代入到SQL语句中执行&gt;&gt;注入漏洞 tips：最普遍的注入漏洞是由于参数值过滤不严导致的。 三、SQL注入漏洞如何寻找 使用工具 优点：自动化，范围广，效率高 缺点：误报，漏报，测试方法有限。 手工测试 优点：测试方法灵活 缺点：效率低，范围窄，因测试者技术水平而异。 四、SQL注入漏洞如何寻找—-漏洞扫描工具 常用漏洞扫描工具：Safe3wvs、BrupSuite、Appscan、Acunetix WVS 五、SQL注入漏洞判断依据 判断注入漏洞的依据是什么？ 根据客户端返回的结果来判断提交的测试语句是否成功被数据库引擎执行， 如果测试语句被执行了，说明存在注入漏洞。 构造测试语句 提交请求 分析返回结果 符合预期结果 存在SQL注入漏洞 构造测试语句 &lt;---不符合预期结果 ---&gt; 不存在SQL注入漏洞 六、常见SQL测试语句和技巧—-测试语句 数字型 And 1=1/And 1=2 OR 1=1/OR 1=2 +、-、*、/、&gt;、&lt;、&lt;=、&gt;= 1 like 1/1 like 2 字符型 And ‘1’ = &apos;1/And &apos;1&apos; = &apos; 2 OR &apos;1&apos; = &apos;1/OR &apos;1&apos; = &apos;2&apos; # +&apos; /+&apos; 1、 -&apos; 、0/-&apos; 1、&gt;、&lt;、&lt;=、&gt;= 1&apos; like &apos;1/1&apos; like &apos;2 七、常见SQL测试语句和技巧—-注释字符 SQLServer数据库注入一、目录 SQLServer 注入常见测试语句 SQLServer手工注入实例演示 SQLServer工具辅助注入实例演示 二、SQLServer注入常见测试语句 常见测试语句： and exists(select * from sysobjects) //判断数据库是否为SQLServer and exists(select * from tableName) //判断某表是否存在..tableName为表名 and 1=(select @@VERSION) //SQLServer版本 and 1=(select db_name()) //当前数据库名 and 1=(select @@servername) //本地服务名 and 1=(select IS_SRVROLEMEMBER( &apos;sysadmin&apos; )) //判断是否是系统管理员 and 1=(select IS_MEMBER( &apos;db_owner&apos; )) //判断是否是库权限 and 1=(select count(*) from master.dbo.sysobjects where xtype = &apos;X&apos; and name= &apos;xp_cmdshell&apos;) //判断XP_CMDSHELL是否存在 MYSQL数据库注入一、目录 Mysql注入常见测试语句 Mysql手工注入实例演示 Mysql工具辅助注入实例演示 二、Mysql注入常见测试语句 常见函数： user() //数据库用户名 current_user() //当前数据库用户名 database() //数据库名 version() //Mysql数据库版本 @@datadir //读取数据库路径 @@basedir //Mysql安装路径 @@version_compile_os //获取操作系统 版本 load_file() //Mysql读取本地文件的函数 var ap = new APlayer({ element: document.getElementById(\"aplayer-PUMNparr\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"Python查星座","slug":"Python查星座","date":"2019-03-14T06:27:45.000Z","updated":"2019-12-16T02:42:52.351Z","comments":true,"path":"2019/03/14/Python查星座/","link":"","permalink":"http://JaneBraun.github.io/2019/03/14/Python查星座/","excerpt":"","text":"利用Python查星座的代码 [星座] []123456789101112131415161718192021# -*-coding:UTF-8 -*-#author:云亦然xingzuo_name = (u'摩羯座',u'水瓶座',u'双鱼座',u'白羊座',u'金牛座',u'双子座', u'巨蟹座',u'狮子座',u'处女座',u'天秤座',u'天蝎座',u'射手座')xingzuo_days = ((1,20),(2,19),(3,21),(4,21),(5,21),(6,22),(7,23),(8,23), (9,23),(10,24),(11,23),(12,22))month1 = int(input(\"请输入月份：\"))day1 = int(input(\"请输入几号：\"))(month,day) = (month1,day1)#filter()函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表#lambda关键字创造匿名函数，一个完整的 lambda\"语句\"代表了一个表达式，这个表达式的定义体必须和声明放在同一行xingzuo_day = filter(lambda x: x &lt;= (month,day),xingzuo_days)xingzuo = len(list(xingzuo_day)) % 12print('你的星座是'+ xingzuo_name[xingzuo]) var ap = new APlayer({ element: document.getElementById(\"aplayer-mQOiLMrE\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://JaneBraun.github.io/tags/python/"}]},{"title":"Python-itchat之微信好友大曝光","slug":"Python-itchat之微信好友大曝光","date":"2019-03-04T09:27:10.000Z","updated":"2019-10-28T03:38:34.630Z","comments":true,"path":"2019/03/04/Python-itchat之微信好友大曝光/","link":"","permalink":"http://JaneBraun.github.io/2019/03/04/Python-itchat之微信好友大曝光/","excerpt":"","text":"itchat的项目简介：https://itchat.readthedocs.io/zh/latest/ itchat是开源的微信个人号接口，可以在py2.7和py3.5的版本环境下运用 py的安装和环境搭建 自行百度哈 要想曝光前必须得安装itchat： 通过以下命令安装itchat：pip install itchat 然后就是打开我们的IDE工具PyCharm（我个人用得比较多的是这款，其他的也行）,创建一个名为acuire.py的文件 以下是该文件的代码[acuire.py] []1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# -*- coding:utf-8 -*-#author:云亦然#需自行安装itchat（pip install itchat）#导入itchat模块，在网页版上操作微信账号的接口import itchat#获取微信的数据def acquire_data(): #扫描二维码，登录微信 itchat.auto_login() #获取所有好友信息 friends = itchat.get_friends(update=True) #返回用户信息字典 return friends#处理微信的数据def parse_data(data): friends = [] for item in data[1:]: #第一个元素是自己排除掉 friend = &#123; 'UserName':item['UserName'],#微信系统内的用户编码标识 'DisplayName':item['DisplayName'],#好友微信名 'NickName':item['NickName'],#好友昵称 'HeadImgUrl':item['HeadImgUrl'],#微信系统内的头像URL 'RemarkName':item['RemarkName'],#好友备注名 'Sex':item['Sex'],#性别 1为男2为女0未设置 'Province':item['Province'],#省份 'City':item['City'],#城市 'Alias':item['Alias'],#微信号 'Signature':item['Signature'].replace('\\n','').replace(',',''),#个性签名（replace替换掉内容换行和逗号） 'StarFriend':item['StarFriend'],#星标好友：1是0否 'ContactFlag':item['ContactFlag'],#好友类型权限：：1和3好友，259和33027不让他看我的朋友圈，65539不看他的朋友圈，65795两项设置全禁止 &#125; friends.append(friend) return friends#存储数据，存储到txt文件上def save_data(): friends = parse_data(acquire_data())#把返回的字典用处理函数处理 for item in friends: with open('WeChat_friends.txt',mode='a',encoding='utf-8') as b: b.write('%s,%s,%s,%s,%s,%d,%s,%s,%s,%s,%d,%d\\n' %(item['UserName'],item['DisplayName'],item['NickName'], item['HeadImgUrl'],item['RemarkName'],item['Sex'], item['Province'],item['City'],item['Alias'],item['Signature'], item['StarFriend'],item['ContactFlag']))if __name__ == '__main__': save_data() 保存好代码之后 就可以在命令行输入：python acquire.py 静候 出现一个二维码扫描登录 登录完成后 该文件下的目录就会生成一个WeChat_friends.txt的文件了。这文件里面就是我们微信好友全部的信息了 接下来就是对保存的数据进行分析了 我们继续创建一个analyze.py文件在这之前，需要安装pyecharts，命令行输入:pip install pyecharts 文件的代码如下 [analyze.py] []1234567891011121314151617181920212223# -*- coding:utf-8 -*-#author:云亦然#需自行安装pyecharts（pip install pyecharts）#用pyecharts制作图表 便于分析#导入pie组件，生成饼图from pyecharts import Piesex = [] #创建空列表,用来记录好友性别with open('WeChat_friends.txt',mode='r',encoding='utf-8') as b: rows =b.readlines() for row in rows: sex.append(row.split(',')[5])attr = ['男生','女生','不详']#性别分类value = [sex.count('1'),sex.count('2'),sex.count('0')]pie = Pie('微信好友性别比例','好友总人数:%d' %len(sex),title_pos=\"center\")#绘制的标题在中间显示pie.add('',attr,value,radius=[30,75],label_text_color=None,is_label_show=True,is_legend_orient=\"vertical\",legend_pos=\"left\")# radius：扇区圆心角展现数据的百分比，半径展现数据的大小# area：所有扇区圆心角相同，仅通过半径展现数据大小pie.render('好友性别分析.html') 在运行python analyze.py时 有可能会出现No module named ‘pyechars_snapshot’的错误 解决方法是:https://pypi.org/project/pyecharts-snapshot/#files下载此文件后，在目录下打开cmd使用命令 pip install pyecharts_snapshot-0.1.8-py2.py3-none-any.whl 安装完成即可 然后你就会发现目录下生成了一个好友性别分析.html的文件 打开就是如图所示了： 更多的小伙伴对这个图是很感应趣：是怎么做出来的呢 他可以是个性签名云图也可以是备注名云图 创建cloud_img.py文件，代码如下[cloud_img.py] [] [url] [link text]1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677# -*- coding:utf-8 -*-#author:云亦然#个性签名云图#需自行安装jieba（pip install jieba）#需自行安装matplotlib（pip install matplotlib）#需自行安装wordcloud（pip install wordcloud）import jiebaimport matplotlib.pyplot as pltfrom wordcloud import WordCloud,STOPWORDS#获取个性签名signatures = []with open('WeChat_friends.txt',mode='r',encoding='utf-8') as b: rows = b.readlines() for row in rows: signature = row.split(',')[9] if signature != '': signatures.append(signature)# 获取备注名remarkNames = []with open('WeChat_friends.txt', mode='r', encoding='utf-8') as b: rows = b.readlines() for row in rows: remarkName = row.split(',')[4] remarkName.replace('a.', 'span') if remarkName != '': remarkNames.append(remarkName)#设置分词split = jieba.cut_for_search(str(signatures))#搜索引擎模式，还有False精准模式分词，True全模式分词split1 = jieba.cut_for_search(str(remarkNames))words = ' '.join(split)#以空格进行拼接words1 = ' '.join(split1)#print(words)#设置屏蔽词，去掉表情和特殊符号等#图片生成的一些无法显示的表情都可以自行添加屏蔽stopwords = STOPWORDS.copy()stopwords.add('span')stopwords.add('class')stopwords.add('emoji')stopwords.add('emoji1f334')stopwords.add('emoji1f388')stopwords.add('emoji1f338')stopwords.add('emoji1f33a')stopwords.add('emoji1f33c')stopwords.add('emoji1f633')stopwords.add('emoji2747')stopwords.add('emoji2764')stopwords.add('emoji1f4b5')stopwords.add('emoji1f497')stopwords.add('u200b')stopwords.add(\"u200b'\")#导入背景图bg_image = plt.imread('bg.jpg')# 设置词云参数，参数分别表示：画布宽高、背景颜色、背景图形状、字体、屏蔽词、最大词的字体大小wc = WordCloud(width=1024,height=768,background_color='white', mask=bg_image, font_path='simkai.ttf', stopwords=stopwords, max_font_size=400, random_state=50)#simkai.ttf是系统的简体字体文件 在C:\\Windows\\Fonts目录下有#将分词后的数据传入云图wc.generate_from_text(words)plt.imshow(wc) #绘制图像plt.axis('off') #不显示坐标轴#保存生成的图片wc.to_file('个性签名云图.jpg')wc.generate_from_text(words1)plt.imshow(wc)plt.axis('off')wc.to_file('备注名云图.jpg') 安装对应需要的库和把字体文件复制到当前目录下 即可命令行输入：python cloud_img.py 两张图片就出来了 接下来就是最精彩的部分了头像分析和头像拼接直接上效果图： 接下来就是准备部分了 需要用到腾讯优图的人脸识别，习惯性的用python中的pip install TencentYoutuyun 结果失败了 正确方法：下载sdk文件：https://github.com/Tencent-YouTu/Python_sdk打开下载目录 运行cmd 命令行输入pip install Python_sdk-master.zip 然后要到腾讯忧图（https://open.youtu.qq.com/）申请公有云服务 （我是一天内就申请到了，就说是运用python-itchat的获取头像后 比对头像是否是真人头像的一次测试）然后我们申请成功后就会有AppID SecretID SecreKey 三个参数。 接着我们就创建head_portrait.py代码如下：[head_portrait.py] []123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112# -*- coding:utf-8 -*-#author:云亦然#头像分析、拼接#自行安装PIL和math（pip install Pillow）import itchatimport osimport TencentYoutuyunfrom pyecharts import Piefrom math import sqrtfrom PIL import Image# 获取微信好友头像def get_head_image(): a = 0 itchat.auto_login() friends = itchat.get_friends(update=True) # 在当前位置创建一个存储头像的目录 save_path = \"head_images\" if not os.path.exists(save_path): os.mkdir(save_path) #获取所以好友的头像,保存到本地 for friend in friends: head = itchat.get_head_img(userName=friend['UserName']) img_name = friend['RemarkName'] img_name = img_name.replace('\"','')#把特殊符号\"替换掉 img_name = img_name.replace('.','')#把特殊符号.替换掉 img_file = open(save_path + '/'+ img_name + '.jpg','wb') a+=1 img_file.write(head) img_file.close() print(a)#输出遍历好友次数def analyse_data(): appid = '*****' secret_id = '*****' secret_key = '******' userid = '531845432' end_point = TencentYoutuyun.conf.API_YOUTU_END_POINT # 优图开放平台 youtu = TencentYoutuyun.YouTu(appid, secret_id, secret_key, userid, end_point) use_face = 0 not_use_face = 0 save_path = \"head_images\" for file_name in os.listdir(save_path): result = youtu.DetectFace(os.path.join(save_path, file_name)) # 人脸检测与分析 # print(result) # 参考 https://open.youtu.qq.com/legency/#/develop/api-face-analysis-detect # 判断是否使用人像 if result['errorcode'] == 0: # errorcode为0表示图片中存在人像 use_face += 1 gender = '男' if result['face'][0]['gender'] &gt;= 50 else '女' age = result['face'][0]['age'] beauty = result['face'][0]['beauty'] # 魅力值 glasses = '不戴眼镜 ' if result['face'][0]['glasses'] == 0 else '戴眼镜' # print(file_name[:-4], gender, age, beauty, glasses, sep=',') with open('header.txt', mode='a', encoding='utf-8') as f: f.write('%s,%s,%d,%d,%s\\n' % (file_name[:-4], gender, age, beauty, glasses)) else: not_use_face += 1 attr = ['使用人脸头像', '未使用人脸头像'] value = [use_face, not_use_face] pie = Pie('好友头像分析', '', title_pos='center') pie.add('', attr, value, radius=[30, 75], is_label_show=True,is_legend_show=True, legend_top='bottom') # pie.show_config() pie.render('好友头像分析.html')#拼接头像def spliced_head(save_path): path_list = [] for item in os.listdir(save_path): img_path = os.path.join(save_path,item) path_list.append(img_path) line = int(sqrt(len(path_list))) New_Image = Image.new('RGB',(128 * line,128 * line)) x,y = 0,0 for item in path_list: try: img = Image.open(item) img = img.resize((128,128),Image.ANTIALIAS) New_Image.paste(img,(x * 128,y * 128)) x+=1 print(x)#查看拼接进度 except IOError: print(\"第%d行，%d列文件读取失败！IOError:%s\"%(y,x,item)) if x == line: x = 0 y+=1 if(x + line * y) == line * line: break New_Image.save('Avatarcollection.jpg') itchat.send_file('Avatarcollection.jpg', toUserName='filehelper')#发送头像合集到文件传输助手if __name__ == '__main__': get_head_image() analyse_data() spliced_head(\"head_images\") 然后如果联系人比较多的话 拼接是需要点时间的微信好友大曝光到此结束！github：https://github.com/JaneBraun/Python-itchat var ap = new APlayer({ element: document.getElementById(\"aplayer-rNohGrng\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://JaneBraun.github.io/tags/python/"}]},{"title":"网络安全之Nmap和sqlmap","slug":"网络安全之Nmap和sqlmap","date":"2019-02-13T02:15:45.000Z","updated":"2019-10-28T03:45:24.819Z","comments":true,"path":"2019/02/13/网络安全之Nmap和sqlmap/","link":"","permalink":"http://JaneBraun.github.io/2019/02/13/网络安全之Nmap和sqlmap/","excerpt":"","text":"什么是网络扫描？ 通过主动发送相关数据包进行网络探测， 识别、分析返回的信息，用以确认网络目标的相关特征。 为什么要做网络扫描？ 安全测试中信息收集的一部分， 主动探测收集目标信息， 为后续的漏洞分析和利用做准备。 Nmap在网络扫描中的常见作用： 1、查看存活主机。 2、扫描目标主机开放端口。 3、鉴别安全过滤机制。 4、识别目标主机的操作系统。 5、查看目标主机服务的版本信息。 6、利用脚本扫描漏洞。Nmap简介： Nmap也称NetworkMapper, 是一款多平台的网络连接扫描软件， 可以探测计算机网络上的主机和服务。 在渗透初期为了绘制目标网络拓补图， 需用到Nmap对目标网络发送特定的数据包， 对返回的数据包进行分析。 Nmap主要适用平台： Windows系统、Mac OS X系统、Linux系统 Nmap常见运行方式: Zenmap GUI方式 命令行方式 Nmap主要参数介绍 Nmap的功能参数主要分为以下几个大类： 1、目标说明 2、主机发现 3、端口扫描 4、端口说明和扫描顺序 5、服务与版本探测 6、脚本扫描 7、操作系统探测 8、时间和性能 9、防火墙/IDS规避和欺骗 10、输出选项1、TARGET SPECIFICATION 目标说明 -iL 从主机地址列表文件中导入扫描地址 -iR 随机选择目标进行扫描，num hosts表示数目 --exclude 排除某个主机地址 --excludefile 排除主机地址列表文件中的地址 2、HOST DISCOVERY 主机发现 -sL 列表扫描，仅将指定的目标IP列举出来，不进行主机发现 -sn 和 -sP一样，只利用ping扫描进行主机发现，不扫描目标主机的端口 -Pn 将所有指定的主机视为已开启状态，跳过主机发现过程 -PS TCP SYN ping ，发送一个设置了SYN标志位的空TCP报文，默认端口为80，也可指定端口 -PA TCP ACK ping ，发送一个设置了ACK标志位的空TCP报文，默认端口为80，也可指定端口 -PU UDP ping ， 发送一个空的UDP报文到指定端口，可穿透只过滤TCP的防火墙 -P0 使用IP协议ping -PR 使用ARP ping -n/-R -n不用域名解析，加速扫描，-R为目标IP做反向域名解析，扫描较慢一些 -dns-servers 自定义域名解析服务器地址 -traceroute 目标主机路由追踪 3、SCAN TECHNIQUES 端口扫描 Nmap将目标端口分为6种状态： -open（开放的） -closed（关闭的） -filtered（被过滤的） -unfiltered（未被过滤）可访问但不确定开发情况 -open|filtered（开放或者被过滤）无法确定端口是开放的还是被过滤的 -closed|filtered（关闭或者被过滤）无法确定端口是关闭的还是被过滤的 Nmap产生结果是基于目标机器的响应报文的，而这些主机可能是不可信任的，会产生迷惑或者误导Nmap的报文。 -sS TCP SYN扫描，半开放扫描，速度快隐蔽性好（不完成TCP连接），能够明确区分端口状态 -sT TCP连接扫描，容易产生记录，效率低 -sA TCP ACK扫描，只设置ACK标志位，区别被过滤与未被过滤的 -sU UDP服务扫描，例如DNS/DHCP等，效率低 4、PORT SPECIFICATION AND SCAN ORDER 端口说明和扫描顺序 -p 指定扫描的端口，可以是单个端口，也可以是端口范围，可以指定UDP或TCP协议扫描特定端口 -p&lt;name&gt; 指定扫描的协议，例如-p http 即可扫描http协议的端口状态 --exclude-ports 排除指定端口不扫描 -F 快速模式，仅扫描100个常用端口 5、SERVICE/VERSION DETECTION 服务与版本探测 Nmap-services 包含大量服务的数据库，Nmap通过查询该数据库可以报告哪些端口可能对应于什么服务，但不一定确定。 -sV 进行服务版本探测 --vesion-intensity&lt;level&gt; 设置版本扫描强度，范围为0-9，默认是7，强度越高，时间越长，服务越可能被正确识别 6、SCRIPT SCAN 脚本扫描 允许用户自己编写脚本来执行自动化的操作或者扩展Nmap的功能，使用Lua脚本语言。 -sC 使用默认类别的脚本进行扫描 --script=&lt;Lua script&gt; 使用某个或某类脚本进行扫描，支持通配符描述 7、OS DETECTION 操作系统探测 用TCP/IP协议栈fingerprinting进行探测， Nmap发送一系列TCP和UDP报文到远程主机， 检查响应中的每一个比特。 测试后Nmap把结果和数据库中超过1500个已知的fingerprints比较，如匹配则输出结果。 -O 启用操作系统探测 -A 同时启用操作系统探测和服务版本探测 --osscan-limit 针对指定的目标进行操作系统探测 --osscan-guess 当Nmap无法确定所检测的操作系统时，会尽可能地提供最相近的匹配 8、TIMING AND PERFORMANCE 时间和性能 Nmap开发的最高优先级是性能， 但实际应用中很多因素会增加扫描时间， 比如特定的扫描选项，防火墙配置以及版本扫描等。 -T&lt;0-5&gt; 设置时间模板级数，在0-5中选择。 T0、T1用于IDS规避，T2降低了扫描速度以使用更少的带宽和资源。 默认为T3，未做任何优化。T4假设具有合适及可靠的网络从而加速扫描。 T5假设具有特别快的网络或者愿为速度牺牲准确性 -host-timeout&lt;time&gt; 放弃低速目标主机，时间单位为毫秒 9、FIREWALL/IDS EVASION AND SPOOFING 防火墙/IDS规避和欺骗 -f（报文分段）；–mtu（使用指定的MTU）将TCP头分段在几个包中，使得包过滤器、IDS以及其他工具的检测更加困难 -D&lt;decoy1[,decoy2][,ME]…&gt; 隐蔽扫描；使用逗号分隔每个诱饵主机，用自己真实IP作为诱饵使用ME选项。 如在6号或更后的位置使用ME选项，一些检测器就不报告真实IP。如不使用ME，真实IP将随机放置 -S&lt;IP_Address&gt; 伪造数据包的源地址 -source-port/-g 伪造源端口 10、OUTPUT 输出选项 -oN 标准输出 -oX XML输出写入指定的文件 -oS 脚本小子输出，类似于交互工具输出 -oG Grep输出 -oA 输出至所有格式 -v 提高输出信息的详细度 -resume&lt;filename&gt; 继续中断的扫描 Nmap的常用扫描技巧：1、扫描单一目标主机 nmap 192.168.0.1 nmap xxx.com （默认发送一个ARP的PING包，扫描1-10000范围内开放端口） 2、扫描整个子网 nmap 192.168.0.1/24 3、扫描多个目标 nmap 192.168.0.1 xxx.com 4、扫描一个范围内的目标 nmap 192.168.0.1-200 5、导入IP列表进行扫描 nmap -iL ip.txt(在Nmap目录下) 6、列举目标地址，但不进行扫描 nmap -sL 192.168.0.1/24 7、排除某IP进行扫描 nmap 192.168.0.1/24 -exclude 192.168.0.1 nmap 192.168.0.1/24 -exclude file ip.txt 8、扫描特定主机的特定端口 nmap -p80，21，8080，135 192.168.0.1 nmap -p50-900 192.168.0.1 9、简单扫描，详细输出返回结果 nmap -vv 192.168.0.1 10、简单扫描并进行路由跟踪 nmap -teaceroute baidu.com 11、ping扫描，不扫描端口（需要root权限） nmap -sP 192.168.0.1 nmap -sn 192.168.0.1 12、探测操作系统类型 nmap -O 192.168.0.1 13、Nmap万能开关-A参数 nmap -A 192.168.0.1 -A 包含1-10000端口的ping扫描，操作系统扫描，脚本扫描，路由跟踪，服务探测 14、混合命令扫描 nmap -vv -p1-1000 -O 192.168.0.1/24 -exclude 192.168.0.1 15、半开放TCP SYN端口扫描码 nmap -sS 192.168.0.1 16、扫描UDP服务端口 nmap -sU 192.168.0.1 17、TCP连接扫描端口 nmap -sT 192.168.0.1 18、由于IDS/IPS系统的存在，防火墙可能会阻止掉 SYN数据包，此时可发送设置了FIN标志的数据包，不需要完成TCP握手，不会再目标产生日志 nmap -sF maizitime.com 19、服务版本探测 nmap -sV 192.168.0.1 20、图形界面版本的对应使用 Nmap脚本扫描 Nmap允许用户自己编写脚本进行自动化扫描操作，或者扩展Nmap现有的功能 脚本文件的默认目录为：/usr/share/nmap/scripts -sC 参数等价于 -sC=default 使用默认类别的脚本进行扫描，可更换其他脚本类别 –script-args=&lt;n1=v1,[n2=v2,…]&gt; 为脚本提供默认参数 –script-args-file=filename 使用文件来为脚本提供参数 –script-updated 更新脚本数据库 –script-trace 显示脚本执行过程中所有数据的发送与接收 –script-help= 显示脚本的帮助信息 Nmap的脚本功能主要分为以下几类，扫描过程中可以使用-script=类别名称 这种方式进行扫描 auth：负责处理鉴权证书（绕开鉴权）的脚本 broadcast：在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务 brute：提供暴力破解方式，针对常见的应用如http/snmp等 default：使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力 discovery：对网络进行更多的信息，如SMB枚举、SNMP查询等 dos：用于进行拒绝服务攻击 exploit：利用已知的漏洞入侵系统 external：利用第三方的数据库或资源，例如进行whois解析 fuzzer：模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive：入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽 malware：探测目标机是否感染了病毒、开启了后门等信息 safe：此类与intrusive相反，属于安全性脚本 version：负责增强服务与版本扫描（Version Detection）功能的脚本 vuln：负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067 使用auth类脚本进行扫描，处理鉴权证书方面的脚本，也可以作为部分弱口令的检测 Nmap –script=auth 使用默认脚本进行扫描 Nmap -sC 扫描是否存在常见漏洞 Nmap –script=vuln 在局域网内扫描更多的端口开启情况 Nmap -n -p135 –script=broadcast SqlMap是一款非常强大的开源SQL自动化注入工具，可以用来检测和利用SQL注入漏洞。 获取SqlMap官网：www.sqlmap.org SqlMap基于python编写，要求python的版本号为2.6或者2.7 Sqlmap 目标 参数 请求方式 注入类型 系统选项 编码选项 数据检索 文件读写 数据保存 杂项 Sqlmap检测注入点 1、判断可注入的参数 2、判断可以用哪种SQL注入技术来注入 3、识别出哪种数据库 4、根据用户选择，读取哪些数据 Sqlmap支持五种不同的注入模式 基于布尔的盲注，即可以根据返回页面判断条件真假的注入。 基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。 基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。 联合查询注入，可以使用union的情况下的注入。 堆查询注入，可以同时执行多条语句的执行时的注入。 Sqlmap -u 目标urlSqlmap -r 目标http请求Sqlmap检测注入点 读取数据库&gt;&gt;读取表&gt;&gt;读取列&gt;&gt;获取内容 –dbs 列出所有的数据库 –current-db 列出当前数据库 –current-user 列出当前用户 –table 列举数据库表名 –columns 列举表列名 –dump 获取表中的数据，包括列 –is-dba 判断是否为管理员用户 -D 指定数据库 -T 指定表 -C 指定列 -p 指定参数Sqlmap命令 列数据库管理用户参数：–users当前用户有权限读取包含所有用户的表的权限时，就可以列出所有管理用户。 列出并破解数据库用户的hash参数：–passwords当前用户有权限读取包含用户密码的彪的权限时，sqlmap会现列举出用户，然后列出hash，并尝试破解。 列出数据库管理员权限参数：–privileges当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的权限，sqlmap将会告诉你哪个是数据库的超级管理员。 获取表中数据个数参数：–count有时候用户只想获取表中的数据个数而不是具体内容，那么就可以使用这个参数。 从数据库服务器中读取文件参数：–file-read当数据库为MySQL，PostgreSQL或Mircrosft SQL Server ，并且当前用户有权限使用特定的函数。读取的文件可以是文本也可以是二进制文件。 把文件上传到数据库服务器中参数：–file-write，–file-dest当数据库为MySQL，PostgreSQL或Mircrosoft SQL Server，并且当前用户有权限使用特定的函数。上传的文件可以是文本也可以是二进制文件。配置文件php-ini中（magic_quotes_gpc = off） HTTP请求延迟参数：–delay可以设定两个HTTP（S）请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。 设定超时时间参数：–timeout可以设定一个HTTP(S）请求超时多久判定为超时，10.5表示10.5秒，默认是30秒。 运行自定义的SQL语句参数：–sql-query，–sql-shellsqlmap会自动检测确定使用哪种SQL注入技术，如何插入检索语句。 运行任意操作系统命令参数：–os-cmd，–os-shell当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。 探测等级参数：–level共有五个等级，默认为1，如果你不确定那个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。 风险等级参数：–risk共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。 测试靶场为封神台; var ap = new APlayer({ element: document.getElementById(\"aplayer-kDPXDQxB\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"网易云歌曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之AWVS和Nessus工具","slug":"网络安全之AWVS和Nessus工具","date":"2019-01-25T07:06:45.000Z","updated":"2021-04-06T14:59:53.341Z","comments":true,"path":"2019/01/25/网络安全之AWVS和Nessus工具/","link":"","permalink":"http://JaneBraun.github.io/2019/01/25/网络安全之AWVS和Nessus工具/","excerpt":"","text":"AWVS安全人员必备工具 AWVS是什么？ AWVS是一款自动化的web安全测试工具 AWVS可以做什么？ AWVS可以扫描任何通过Web浏览器访问和遵循HTTP/HTTPS规则的Web站点。 可以通过扫描漏洞，比如：SQL注入攻击、跨站脚本攻击等来检测我们的网站是否是安全的。 为什么要使用AWVS？ 网站的安全是容易被忽视的，黑客具备广泛的攻击手段。 因此，需要您定期的扫描你的Web应用，但是手动检测你所有的Web应用是否在安全漏洞比较复 杂和耗时所以你需要一款自动化的Web漏洞扫描工具。 适用对象 适用于任何企业的内网、外网和面向客户、厂商和其它人员的Web网站。 功能介绍 WebScanner 核心功能 Web安全漏洞扫描 Site Crawler 爬虫功能 遍历站点目录结构 Target Finder 端口扫描 找出web服务器 Subdomain Scanner 子域名扫描器 利用DNS查询 Blind SQL Injector 盲注工具 HTTP Editor http协议数据包编辑器 HTTP Sniffer HTTP协议嗅探器 HTTP Fuzzer 模糊测试工具 Authentication Tester Web认证破解工具 Nessus简介 Nessus是一款系统漏洞扫描与分析软件。 漏洞扫描技术 基于漏洞的匹配方法和基于插件方法 Nessus采用基于插件的技术 扫描功能介绍 资产发现 审计系统 漏洞扫描 认证扫描检测本地漏洞和条件 基于网络的扫描 认证的SCAP漏洞扫描器 Nessus特点 提供完整的漏洞扫描服务，并随时更新其漏洞数据库 Nessus可同时在本机或远端上遥控，进行系统的漏洞分析扫描 其运作效能能随着系统的资源而自行调整 可自定义插件（Plug-in） 完整支持SSL(Secure Socket Layer) var ap = new APlayer({ element: document.getElementById(\"aplayer-FwnvGjfq\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"动漫歌曲\", author: \"随机\", url: \"https://api.paugram.com/acgm/?list=1&play=true\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之安全测试工具AppScan","slug":"网络安全之安全测试工具AppScan","date":"2019-01-15T02:53:01.000Z","updated":"2019-03-07T07:57:05.178Z","comments":true,"path":"2019/01/15/网络安全之安全测试工具AppScan/","link":"","permalink":"http://JaneBraun.github.io/2019/01/15/网络安全之安全测试工具AppScan/","excerpt":"","text":"AppScan是IBM公司出的一款Web应用安全测试工具，AppScan采用黑盒测试的方式，可以扫描常见的web应用安全漏洞。 工作原理首先是根据起始页爬取站下所有可见的页面，同时测试常见的管理后台；获得所有页面之后利用SQL注入原理进行测试是否存在注入点以及跨站脚本攻击的功能；同时还会对cookie管理、会话周期等常见的web安全漏洞进行检测。AppScan功能十分齐全，支持登录功能并且拥有十分强大的报表。在扫描结果中，不仅能够看到扫描的漏洞，还提供了详尽的漏洞原理、修改建议、手动验证等功能。AppScan的缺点在于，作为一款商业软件，价格十分昂贵。 适用对象适用于任何企业的内网、外网和面向客户、厂商和其它人员的Web网站 法律规定中华人民共和国刑法第二百八十五条第二百八十六条第二百八十七条 AppScan的安装AppScan作为一款集成的工具跟其他常见工具安装一样，基本就是直接下一步即可。安装前需要依赖.net framework 4.5AppScan约800M AppScan扫描实例演示使用配置向导通过配置向导来完成一次简单的扫描扫描的网站：http://testasp.vulnweb.com/PS：请勿随意扫描互联网上的中小企业网站！ 配置向导的缺点简单的配置，可能无法找到所有的网页。例如：类似业务逻辑，转账之类的功能点。转账成功的页面扫描器是无法到达的。或者AppScan自带的浏览器无法打开某些网页。 其他功能1.web service扫描2.玻璃盒扫描技术3.记录代理功能 var ap = new APlayer({ element: document.getElementById(\"aplayer-eYduIDDq\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"故乡\", author: \"许巍\", url: \"http://other.web.ra01.sycdn.kuwo.cn/resource/n2/128/8/90/3648166111.mp3\", pic: \"http://img2.kuwo.cn/star/starheads/120/4/91a20111de4e533dfbde61da6050e02_0.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之漏洞信息收集","slug":"网络安全之漏洞信息收集","date":"2019-01-07T08:07:52.000Z","updated":"2019-03-07T07:57:14.269Z","comments":true,"path":"2019/01/07/网络安全之漏洞信息收集/","link":"","permalink":"http://JaneBraun.github.io/2019/01/07/网络安全之漏洞信息收集/","excerpt":"","text":"漏洞信息收集 漏洞平台是很好的信息收集平台，能够通过公开的漏洞报告了解目标的各项信息，常用的漏洞平台如下：乌云漏洞平台360补天漏洞平台Exploit-DBGHDBCVE中文漏洞信息库中国国家信息安全漏洞库国家信息安全漏洞共享平台 漏洞库搜索方式：1.搜索对应厂商2.搜索对应软件平台 信息收集的目标：1.已有的渗透过程2.目标的技术架构3.目标使用架构的公开漏洞4.目标可能进行的修复 使用搜索引擎搜索漏洞：上传类注入类敏感信息类例如：可通过搜索引擎寻找目标使用的CMS平台漏洞，再对目标站点进行测试。 使用工具收集信息Windows平台下常用的几种工具和方法：1.使用DOS命令2.使用各类扫描工具3.使用浏览器内置功能和插件 常用的DOS命令：ping ： 网络连通测试arp ： 显示和修改地址解析协议tracert ： 显示路由nslookup ：域名系统查询 telnet ： 测试是否开启远程连接netstat ： 查看本地机器所有开放端口nbtstat ： 获取NetBIOS信息ftp ： 测试开放了ftp的远程主机net ： 最重要的命令，需要透彻掌握每一个自=子命令 常用的扫描工具：AWVSAppScan ZenmapDirbusterWwwscan御剑系列扫描工具Layer子域名挖掘机Maltego 可以用作信息收集的工具很多，在此仅列举几个例子 使用浏览器内置功能和插件： 常用浏览器有Google Chrome、Firefox、IE、傲游浏览器以火狐浏览器为例，有几种实用的插件如下：showIP插件HttpFox插件Cookie Watcher插件Header Spy插件Wappalyzer插件FlagFox插件DomainDetails插件内置功能： 使用浏览器内置的开发者工具收集页面信息F12 Kali Linux1.枚举服务DNS枚举工具DNSenumDNS枚举工具fierceSNMP枚举工具Snmpwalk2.测试网络范围域名查询工具Dmitry跟踪路由工具Scapy3.识别活跃的主机、查看打开的端口、系统指纹识别、服务的指纹识别Namphping34.其他信息收集手段 ARP侦查工具Netdiscover5.使用Maltego收集信息 在社交网站中进行数据挖掘社交网站特点：清晰暴露个人关系网络包含大量个人信息具备多种工作、生活服务功能身份认证机制并非完美记录大量个人行为特征 信息获取：直接通过个人资料和发布的信息获取姓名、出生日期、电话号码、QQ号码、微信号码、电子邮箱、网络昵称、籍贯信息、学校信息、工作单位、车牌号码、宠物昵称等一切能够直观获得的数据。 分析关系网络： 分析目标稳定的社交圈子人物分布，包括相互关系、工作职能、年龄性别、地理分布、共同兴趣等信息。 深度分析：语言文字图片中判定性格特征综合关联分析兴趣爱好分析目标需求分析目标当前主要矛盾分析目标特长和弱点提取重要日期、文字、数字等 获取信息后能干什么：钓鱼攻击完善密码构成元素通过目标员工套取企业信息查询已有数据库中的密码判定目标可能会使用的安全技术 一切的前提：身份伪造使用伪造的帐号密码、身份信息长期在各主流网站“养”一些伪装帐号帐号的信息，例如照片、博文等，可从他人真实帐号中获取，并时常维护所“养”帐号尽可能涵盖更多的身份、年龄分布、职业分布 var ap = new APlayer({ element: document.getElementById(\"aplayer-xIGExLeE\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"故乡\", author: \"许巍\", url: \"http://other.web.ra01.sycdn.kuwo.cn/resource/n2/128/8/90/3648166111.mp3\", pic: \"http://img2.kuwo.cn/star/starheads/120/4/91a20111de4e533dfbde61da6050e02_0.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"网络安全之搜索引擎收集信息","slug":"网络安全之搜索引擎收集信息","date":"2018-12-28T07:10:47.000Z","updated":"2019-03-07T07:57:26.904Z","comments":true,"path":"2018/12/28/网络安全之搜索引擎收集信息/","link":"","permalink":"http://JaneBraun.github.io/2018/12/28/网络安全之搜索引擎收集信息/","excerpt":"","text":"利用搜索引擎收集信息 GoogleHacking 这技术能够快速全面让攻击者挖掘到有价值的信息1.敏感信息2.具备特殊URL关键字的目标地址3.搜索已有的攻击结果4.指定格式文件5.其他与某个站点相关的信息 特别提示：利用搜索引擎的网页快照功能，有时候可以发现很多有价值的信息。 维基百科上对搜索引擎的理解：网络搜索引擎是一个软件系统，它被设计用来在万维网上搜索信息。搜索结果通常以通常称为搜索引擎结果页面（SERP）的结果行呈现。信息可以是网页、图像和其他类型的文件的混合。一些搜索引擎还挖掘数据库或开放目录中可用的数据。与只由人类编辑器维护的web目录不同，搜索引擎还通过在Web爬虫上运行算法来维护实时信息。百度上对搜索引擎的理解：搜索引擎（Search Engine）是指根据一定的策略、运用特定的计算机程序从互联网上搜集信息，在对信息进行组织和处理后，为用户提供检索服务，将用户检索相关的信息展示给用户的系统。搜索引擎包括全文索引、目录索引、元搜索引擎、垂直搜索引擎、集合式搜索引擎、门户搜索引擎与免费链接列表等。 搜索引擎：google、bing、Yahoo、搜狗、360、神马、有道、中国搜索、盘古搜索、ZoomEye、Dogpile狗狗搜索、搜索岛 洋葱里的：DuckDUCkGo、notEvil、TORCH 常用的GoogleHacking语法：1.intext：把网页的正文内容中的某个字符作为搜索的条件 2.intitle：把网页标题中的某个字符作为搜索的条件 3.cache：搜索搜索引擎里关于某些内容的缓存，可能会在过期内容中发现有价值的信息 4.filetype：指定一个格式类型的文件作为搜索对象 5.inurl：搜索包含指定字符的URL 6.site：在指定的站点搜索相关内容 上图可以看到语法可以合起来使用 其他GoogleHacking语法：1.引号 “ ” 把关键字打上引号后把引号部分作为整体来搜索2.or 同时搜索两个或者更多的关键字3.link： 搜索某个网站的链接 典型用法：1.找管理后台地址 site:xxx.com intext:管理、后台、登录、用户名、密码、系统、帐号 site:xxx.com inurl:login、admin、manage、manager、admin_login、system site:xxx.com intitle:管理、后台、登陆2.找上传类漏洞地址 site:xxx.com inurl:file site:xxx.com inurl:upload3.找注入页面 site:xxx.com inurl:php?id=4.找编辑器页面 site:xxx.com inurl:ewebeditor 比较全的搜索网站 快搜：http://search.chongbuluo.com/ 学术搜索：http://scholar.chongbuluo.com/ 资源搜索：http://magnet.chongbuluo.com/ var ap = new APlayer({ element: document.getElementById(\"aplayer-OnpiXltY\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"故乡\", author: \"许巍\", url: \"http://other.web.ra01.sycdn.kuwo.cn/resource/n2/128/8/90/3648166111.mp3\", pic: \"http://img2.kuwo.cn/star/starheads/120/4/91a20111de4e533dfbde61da6050e02_0.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"网络安全","slug":"网络安全","permalink":"http://JaneBraun.github.io/tags/网络安全/"}]},{"title":"Python的终端影集","slug":"Python的终端影集","date":"2018-12-25T08:54:10.000Z","updated":"2019-10-28T03:37:41.384Z","comments":true,"path":"2018/12/25/Python的终端影集/","link":"","permalink":"http://JaneBraun.github.io/2018/12/25/Python的终端影集/","excerpt":"","text":"先上效果图吧： 怎么实现呢？ 通过python的PIL库,将彩色转黑白(256种灰度),创建字符集,建立字符集与灰度的映射没有PIL库的话 需要 pip install Pillow 最好把照片裁成1:1的比例,保证显示比例正常，通过定时刷新，模拟一个动感影集 上面的图 我懒得截图了 就成那样了 [Python的终端影集][]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758from PIL import Imageimport osimport timecodeLib = &apos;&apos;&apos;@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;&gt;i!lI;:,&quot;^`&apos;. &apos;&apos;&apos;#生成字符画所需的字符集count = len(codeLib)def transform_image(image_file): #转换为黑白图片，参数&quot;L&quot;表示黑白模式 image_file = image_file.convert(&quot;L&quot;) codePic = &apos;&apos; #size属性表示图片的分辨率，&apos;0&apos;为横向大小，&apos;1&apos;为纵向 for h in range(0,image_file.size[1]): for w in range(0,image_file.size[0]): #返回指定位置的像素，如果所打开的图像是多层次的图片，那这个方法就返回一个元组 gray = image_file.getpixel((w,h)) #建立灰度与字符集的映射 codePic = codePic + codeLib[int(((count-1)*gray)/256)] codePic = codePic+&apos;\\r\\n&apos; return codePicdef main(): # 获取终端的高度 height = os.get_terminal_size().lines # 获取同级目录文件夹下所有图片的列表 the_names = os.listdir(&quot;./images&quot;) # 开启循环 while 1 : # 遍历每张图片 for the_name in the_names: try: # 清屏幕 print(&quot;\\n&quot;*height) # 拼合当前图片名 my_img = open(&quot;./images/&quot;+the_name,&apos;rb&apos;) # 打开当前图片 image_file = Image.open(my_img) #调整图片尺寸到原来的四分之一 # image_file=image_file.resize((int(image_file.size[0]*0.5), int(image_file.size[1]*0.5))) image_file=image_file.resize((250, 250)) #打印图片 print(transform_image(image_file)) # 每张图片停顿10秒 time.sleep(10) except Exception as e: passif __name__ == &quot;__main__&quot;: main() 完 var ap = new APlayer({ element: document.getElementById(\"aplayer-kghqdrGP\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://JaneBraun.github.io/tags/python/"}]},{"title":"Python猜拳游戏","slug":"Python猜拳游戏","date":"2018-12-19T07:32:43.000Z","updated":"2019-12-16T02:42:52.301Z","comments":true,"path":"2018/12/19/Python猜拳游戏/","link":"","permalink":"http://JaneBraun.github.io/2018/12/19/Python猜拳游戏/","excerpt":"","text":"学习使我快乐，在学习了众多的python内容之后，例如：注释，变量，字符串，if条件语句等等。好像学了东西没记录下来，就像没有学到东西一样。然后我就学到了python的一个猜拳游戏，对我来说，是真的有点无从下手的感觉。。。先上一张游戏图片，有点简陋 哈哈 然后下面就是代码块[Python猜拳游戏][]123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687# coding = utf-8# game by yunyiranimport randomdef start(): ComputerWinTime = 0 PlayerWinTime = 0 dict1 = &#123;1: &quot;剪刀&quot;, 2: &quot;石头&quot;, 3: &quot;布&quot;&#125; print(&quot;&lt;欢迎来到云亦然猜拳小游戏&gt;&quot;) print(&quot;****************&quot;) print(&quot;1.开始新游戏&quot;) print(&quot;2.我要走了&quot;) print(&quot;输入其它内容即视为退出&quot;) print(&quot;****************&quot;) XuanZe = input(&quot;请选择：&quot;) if XuanZe == &apos;1&apos;: while ComputerWinTime &lt; 2: rand = random.randint(1,3) while True: onetime = input(&apos;请输入手势[剪刀、石头、布]&apos;) onetime = onetime.strip() if onetime in dict1.values(): break else: print(&quot;Error:&#123;&#125;是个错误的手势&quot;.format(onetime)) if rand == 1: if onetime == &quot;剪刀&quot;: result = (&quot;和我不相上下&quot;) elif onetime == &quot;石头&quot;: result = (&quot;恭喜！你赢了我。&quot;) PlayerWinTime += 1 else: result = (&quot;你输给了我哦&quot;) ComputerWinTime += 1 elif rand == 2: if onetime == &quot;剪刀&quot;: result = (&quot;你输给了我哦&quot;) ComputerWinTime += 1 elif onetime == &quot;石头&quot;: result = (&quot;和我不相上下&quot;) else: result = (&quot;恭喜！你赢了我。&quot;) PlayerWinTime += 1 else: if onetime == &quot;剪刀&quot;: result = (&quot;恭喜！你赢了我。&quot;) elif onetime == &quot;石头&quot;: result = (&quot;你输给了我哦&quot;) ComputerWinTime += 1 else: result = (&quot;平局&quot;) print(&quot;电脑出的是:%s\\n你出的是:%s\\n结果是:%s&quot;%(dict1[rand],onetime,result)) else: if PlayerWinTime == 2: print(&quot;累计赢了两局，还来吗？&quot;) print(&quot;1.继续&quot;) print(&quot;2.不来了&quot;) XuanZe = input(&quot;请选择:&quot;) if XuanZe == &apos;1&apos;: start() else: exit() else: print(&quot;累计输了两局，还来吗？&quot;) print(&quot;1.继续&quot;) print(&quot;2.不来了&quot;) XuanZe = input(&quot;请选择:&quot;) if XuanZe == &apos;1&apos;: start() else: exit() elif XuanZe == &apos;2&apos;: print(&quot;你走吧！&quot;) exit() else: exit()start() 嗯，接下来就说一下那个新手遇到的坑。 （1）忘记在 if , elif , else , for , while , class ,def 声明末尾添加 ：（导致 “SyntaxError ：invalid syntax”） 该错误将发生在类似如下代码中：[]12if spam == 42 print(&apos;Hello!&apos;)（2）使用 = 而不是 ==（导致“SyntaxError: invalid syntax”） = 是赋值操作符而 == 是等于比较操作。该错误发生在如下代码中：[]12if spam = 42: print(&apos;Hello!&apos;)（3）错误的使用缩进量。（导致“IndentationError：unexpected indent”、“IndentationError：unindent does not match any outer indetation level”以及“IndentationError：expected an indented block”） 记住缩进增加只用在以：结束的语句之后，而之后必须恢复到之前的缩进格式。该错误发生在如下代码中：[]12345678910111213print(&apos;Hello!&apos;) print(&apos;Howdy!&apos;)#或者if spam == 42: print(&apos;Hello!&apos;) print(&apos;Howdy!&apos;)#或者if spam == 42:print(&apos;Hello!&apos;) 完。 var ap = new APlayer({ element: document.getElementById(\"aplayer-pTycuebU\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音新曲\", author: \"随机\", url: \"https://api.uomg.com/api/rand.music\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"学无止境","slug":"学无止境","permalink":"http://JaneBraun.github.io/tags/学无止境/"},{"name":"python","slug":"python","permalink":"http://JaneBraun.github.io/tags/python/"}]},{"title":"入门渗透测试DVWA靶机的搭建","slug":"入门渗透测试DVWA靶机的搭建","date":"2018-12-04T09:15:49.000Z","updated":"2019-03-07T07:56:20.640Z","comments":true,"path":"2018/12/04/入门渗透测试DVWA靶机的搭建/","link":"","permalink":"http://JaneBraun.github.io/2018/12/04/入门渗透测试DVWA靶机的搭建/","excerpt":"","text":"之前偶然一次机会，接触到了web安全测试，还不知道它是个什么东西，突然有一天，天上掉下来一个DVWA。在某一次的视频学习之中，知道了靶机这东西，就是给我们练习的地方。学习web渗透测试，DVWA就是一款最适合你的靶机，接下来我们一起动手搭建DVWA测试环境吧需要用到的工具：phpStudy，DVWA我这里用的是win10，win7什么的都是可以的，支持phpStudy就行 phpStudy2018下载地址:http://phpstudy.php.cn/DVWA软件的GITHUB地址:https://github.com/ethicalhack3r/DVWA 也可以去百度DVWA 第一个网址下图： phpStudy的安装与启动安装方法：直接打开phpStudy的压缩包中的phpStudySetup.exe tips：不要作死（路径不能包含中文和空格）我电脑只有C盘所以就装在了C盘，最好装在除C盘以外的盘。 安装后会在桌面生成一个快捷方式，是 phpStudy启动程序 。 在资源管理器中打开安装目录 C:\\phpStudy ，可以看到已经安装的文件。重点是这里》》WWW 是默认的网站根目录。 phpStudy.exe 是启动程序。 接下来就是去下载DVWA了，下载完后把DVWA-master.zip文件复制到C:\\phpStudy\\PHPTutorial\\WWW目录下，然后把压缩包中DVWA-master文件夹里的文件全部解压到这目录下（有两个文件重复的，直接替换掉就可以了） 我们再回到phpStudy,启动它。 然后我们打开浏览器，在浏览器的地址栏上输入127.0.0.1或者localhost，发现如图下的问题 之后我们再到这个图的下面把config.inc.php.dist中的.dist去掉，打开这个config.inc.php文件 修改数据库账号密码为root。 再刷新一下页面。然后按创建数据库 默认账号密码admin/password（高级点的可以自行去数据库写账号密码进去） 到这里就把整个靶机环境弄好了，如下图：从容易到不可能，网上有一些教程可以自行百度。快去骑马射箭吧！！ var ap = new APlayer({ element: document.getElementById(\"aplayer-LkNOnGxq\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"DVWA","slug":"DVWA","permalink":"http://JaneBraun.github.io/tags/DVWA/"},{"name":"WEB渗透测试","slug":"WEB渗透测试","permalink":"http://JaneBraun.github.io/tags/WEB渗透测试/"}]},{"title":"打造企业级Zabbix","slug":"打造企业级Zabbix","date":"2018-11-28T03:39:11.000Z","updated":"2019-03-07T07:56:11.041Z","comments":true,"path":"2018/11/28/打造企业级Zabbix/","link":"","permalink":"http://JaneBraun.github.io/2018/11/28/打造企业级Zabbix/","excerpt":"","text":"安装企业级网络监视Zabbix我是在CentOS-7-KdeLive下进行安装下载的，在这之前，我是看到了前沿信安有推文，环境基于LAMP平台搭建了ZABBIX官网4.0版本，我下载回来之后，用虚拟机扫描他的虚拟机文件，按下图步骤做，发现出现了“zabbix监控报错zabbix server is not running: the information displayed may not be current”的问题，百度给出了一些处理方法，但是还是没法解决，然后我就想自己搞镜像来安装Zabbix。 1.安装apache（没遇到问题） 2.安装mysql（发现yum install mariadb mariadb-server mariadb-libs mariadb-devel错误）【一定要先检查有没有 yum list mariadb*和查看命令：rpm -qa | grep mariadb】还有可能就是（需要自己添加yum数据源）tips：MySQL 已经不再包含在 CentOS 7 的源中，而改用了 MariaDB，centos 7 中自带MariaDB。。 3.安装Zabbix 前端（最简单）经过了长久的安装配置，最终安装好了Zabbix之后，还是出现了（Zabbix服务器正在运行 没有 本地主机：10051）。。很是难受，然后去查了日志｛cannot start preprocessing service｝小白的我，看不懂。。最后一个小小的改动就解决的，把（SELinux status:）的值永久设置为disabled。然后reboot，然后就成功了。如图下： 终于解决了，很开心。linux 升级命令的一些：yum -y update 升级所有包同时也升级软件和系统内核 代码如下:yum -y upgrade只升级所有包，不升级软件和系统内核 努力学习linux执行代码，在安装软件时候碰到的小问题，升级之后就可以安装了。 var ap = new APlayer({ element: document.getElementById(\"aplayer-SaiBLKDj\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"Zabbix","slug":"Zabbix","permalink":"http://JaneBraun.github.io/tags/Zabbix/"}]},{"title":"阿狸的隐身术","slug":"阿狸的隐身术","date":"2018-11-22T02:30:07.000Z","updated":"2019-03-07T07:56:02.679Z","comments":true,"path":"2018/11/22/阿狸的隐身术/","link":"","permalink":"http://JaneBraun.github.io/2018/11/22/阿狸的隐身术/","excerpt":"","text":"这里推荐一个论坛“88骇客网-极安中国”从站长的隐身术了解到了ctf，ctf学习之路很长，自己弄的一个小小题目，给入门的小伙伴们,大家共同学习。解压缩的密码是1+1=？ 题目链接：https://www.lanzous.com/i2lhrkh var ap = new APlayer({ element: document.getElementById(\"aplayer-uqbeObse\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"抖音热曲\", author: \"随机\", url: \"https://www.lori.tw/dyph.php\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://JaneBraun.github.io/tags/CTF/"}]},{"title":"提权-收集系统信息","slug":"提权-收集系统信息","date":"2018-11-17T13:22:26.000Z","updated":"2021-04-06T15:00:18.766Z","comments":true,"path":"2018/11/17/提权-收集系统信息/","link":"","permalink":"http://JaneBraun.github.io/2018/11/17/提权-收集系统信息/","excerpt":"","text":"今天的学习内容哈哈提权准备工作需要收集系统信息以下是一些执行命令获取Windows操作系统的信息1.systeminfo 获取操作系统类型、版本等信息2.ipconfig /all 获取是否为独立IP地址、DNs等信息3.net user 看英文4.whoami 很明显 我是谁5.netstat -an 当前端口开放情况 一个收集系统信息的脚本——————@echo off 关闭回显echo #######system info collectionsysteminfoverhostnamenet usernet localgroupnet localgroup adminstratorsnet user guestnet user administratorecho ######at- with atq####echo schtask /queryechoecho ####task-list####tasklist /svcechoecho ###net-work infomationipconfig/allroute printarp -anetstat -anipconfig /displaydnsechoecho ###service####sc query type= service state= allecho ####file-######cd \\tree /F &gt; tree.txt #制作该目录下的文档结构图 var ap = new APlayer({ element: document.getElementById(\"aplayer-ZVDzXpZN\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"动漫歌曲\", author: \"随机\", url: \"https://api.paugram.com/acgm/?list=1&play=true\", pic: \"https://i.loli.net/2019/03/07/5c80ce3a5aac4.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);","categories":[],"tags":[{"name":"提权","slug":"提权","permalink":"http://JaneBraun.github.io/tags/提权/"}]},{"title":"Hello HEXO","slug":"Hello-HEXO","date":"2018-11-11T11:58:27.000Z","updated":"2018-11-22T02:48:30.699Z","comments":true,"path":"2018/11/11/Hello-HEXO/","link":"","permalink":"http://JaneBraun.github.io/2018/11/11/Hello-HEXO/","excerpt":"","text":"以前看着别人的博客，我羡慕的要死,第一次自己做成了博客把他放在了github上，有点小激动,花了很长很长时间去弄音乐插件,结果还是不太懂pug的用法,不过问题不大,慢慢学习吧。嗯,说下这个博客框架吧，这是一个基于Node.js的HEXO框架，其实挺简单的，还可以一键部署，不过那些主题看得我有点乱,最终选择了这个主题,感谢Cxo的作者LonglongYu。今天就先到这吧，看了一天的电脑，眼睛好累呀。","categories":[],"tags":[{"name":"第一次","slug":"第一次","permalink":"http://JaneBraun.github.io/tags/第一次/"},{"name":"学无止境","slug":"学无止境","permalink":"http://JaneBraun.github.io/tags/学无止境/"}]}]}